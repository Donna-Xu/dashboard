{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xud1\\\\ReactProj\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// PredictionDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [predictions, setPredictions] = useState([]);\n  const [temperature, setTemperature] = useState('');\n  const [pressure, setPressure] = useState('');\n  const fetchPredictions = async () => {\n    try {\n      const response = await axios.get(`/api/predictions?temperature=${temperature}&pressure=${pressure}`);\n      setPredictions(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchPredictions();\n  }, [temperature, pressure]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Temperature\",\n      value: temperature,\n      onChange: e => setTemperature(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Pressure\",\n      value: pressure,\n      onChange: e => setPressure(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: predictions.map(prediction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [prediction.prediction_key, \", Temperature: \", prediction.temperature, \", Pressure: \", prediction.pressure]\n      }, prediction._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m9J/wyCObQEzfuEULFM85xp2QY8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","predictions","setPredictions","temperature","setTemperature","pressure","setPressure","fetchPredictions","response","get","data","error","console","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","prediction","prediction_key","_id","_c","$RefreshReg$"],"sources":["C:/Users/xud1/ReactProj/my-app/src/App.js"],"sourcesContent":["// PredictionDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [predictions, setPredictions] = useState([]);\n  const [temperature, setTemperature] = useState('');\n  const [pressure, setPressure] = useState('');\n\n  const fetchPredictions = async () => {\n    try {\n      const response = await axios.get(`/api/predictions?temperature=${temperature}&pressure=${pressure}`);\n      setPredictions(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchPredictions();\n  }, [temperature, pressure]);\n\n  return (\n    <div>\n      <input\n        type=\"number\"\n        placeholder=\"Temperature\"\n        value={temperature}\n        onChange={(e) => setTemperature(e.target.value)}\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Pressure\"\n        value={pressure}\n        onChange={(e) => setPressure(e.target.value)}\n      />\n      <ul>\n        {predictions.map((prediction) => (\n          <li key={prediction._id}>\n            {prediction.prediction_key}, Temperature: {prediction.temperature}, Pressure: {prediction.pressure}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,gCAA+BN,WAAY,aAAYE,QAAS,EAAC,CAAC;MACpGH,cAAc,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdY,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACJ,WAAW,EAAEE,QAAQ,CAAC,CAAC;EAE3B,oBACEP,OAAA;IAAAe,QAAA,gBACEf,OAAA;MACEgB,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,aAAa;MACzBC,KAAK,EAAEb,WAAY;MACnBc,QAAQ,EAAGC,CAAC,IAAKd,cAAc,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFzB,OAAA;MACEgB,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEX,QAAS;MAChBY,QAAQ,EAAGC,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFzB,OAAA;MAAAe,QAAA,EACGZ,WAAW,CAACuB,GAAG,CAAEC,UAAU,iBAC1B3B,OAAA;QAAAe,QAAA,GACGY,UAAU,CAACC,cAAc,EAAC,iBAAe,EAACD,UAAU,CAACtB,WAAW,EAAC,cAAY,EAACsB,UAAU,CAACpB,QAAQ;MAAA,GAD3FoB,UAAU,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACvB,EAAA,CAzCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}