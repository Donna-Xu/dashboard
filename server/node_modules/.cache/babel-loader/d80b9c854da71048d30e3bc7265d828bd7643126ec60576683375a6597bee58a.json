{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xud1\\\\ReactProj\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [collectionsData, setCollectionsData] = useState({\n    temperatureData: [],\n    pressureData: [],\n    colorData: [],\n    locationData: [],\n    meltingPointData: [],\n    freezingPointData: [],\n    rainRateData: [],\n    sizeData: [],\n    weightGramsData: [],\n    quantityData: []\n  });\n  useEffect(() => {\n    // Fetch data for all collections\n    fetchCollectionsData();\n  }, []);\n  const fetchCollectionsData = () => {\n    const updatedData = {\n      ...collectionsData\n    };\n    for (const collection in updatedData) {\n      fetch(`/api/${collection}`).then(response => response.json()).then(data => {\n        updatedData[collection] = data;\n      });\n    }\n    setCollectionsData(updatedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(collectionsData).map(([collectionName, collectionData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: collectionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: collectionData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, collectionName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"w2YDqY1saK2FPDxnPdEh4uNhF74=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","collectionsData","setCollectionsData","temperatureData","pressureData","colorData","locationData","meltingPointData","freezingPointData","rainRateData","sizeData","weightGramsData","quantityData","fetchCollectionsData","updatedData","collection","fetch","then","response","json","data","children","Object","entries","map","collectionName","collectionData","fileName","_jsxFileName","lineNumber","columnNumber","item","index","_c","$RefreshReg$"],"sources":["C:/Users/xud1/ReactProj/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Dashboard() {\n  const [collectionsData, setCollectionsData] = useState({\n    temperatureData: [],\n    pressureData: [],\n    colorData: [],\n    locationData: [],\n    meltingPointData: [],\n    freezingPointData: [],\n    rainRateData: [],\n    sizeData: [],\n    weightGramsData: [],\n    quantityData: [],\n  });\n\n  useEffect(() => {\n    // Fetch data for all collections\n    fetchCollectionsData();\n  }, []);\n\n  const fetchCollectionsData = () => {\n    const updatedData = { ...collectionsData };\n\n    for (const collection in updatedData) {\n      fetch(`/api/${collection}`)\n        .then((response) => response.json())\n        .then((data) => {\n          updatedData[collection] = data;\n        });\n    }\n\n    setCollectionsData(updatedData);\n  };\n\n  return (\n    <div>\n      {/* Display collections */}\n      {Object.entries(collectionsData).map(([collectionName, collectionData]) => (\n        <div key={collectionName}>\n          <h3>{collectionName}</h3>\n          <ul>\n            {collectionData.map((item, index) => (\n              <li key={index}>{/* Display collection data here */}</li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC;IACrDQ,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACd;IACAiB,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,WAAW,GAAG;MAAE,GAAGb;IAAgB,CAAC;IAE1C,KAAK,MAAMc,UAAU,IAAID,WAAW,EAAE;MACpCE,KAAK,CAAE,QAAOD,UAAW,EAAC,CAAC,CACxBE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdN,WAAW,CAACC,UAAU,CAAC,GAAGK,IAAI;MAChC,CAAC,CAAC;IACN;IAEAlB,kBAAkB,CAACY,WAAW,CAAC;EACjC,CAAC;EAED,oBACEhB,OAAA;IAAAuB,QAAA,EAEGC,MAAM,CAACC,OAAO,CAACtB,eAAe,CAAC,CAACuB,GAAG,CAAC,CAAC,CAACC,cAAc,EAAEC,cAAc,CAAC,kBACpE5B,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,EAAKI;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBhC,OAAA;QAAAuB,QAAA,EACGK,cAAc,CAACF,GAAG,CAAC,CAACO,IAAI,EAAEC,KAAK,kBAC9BlC,OAAA,WAASkC,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0C,CACzD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GANGL,cAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOnB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC9B,EAAA,CAhDQD,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAkDlB,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}