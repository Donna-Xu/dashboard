{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xud1\\\\ReactProj\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MongoDBDashboard() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Replace the URL with your API endpoint\n    axios.get('http://localhost:5000/api/data').then(response => {\n      setData(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MongoDB Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Temperature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), \" \", item.temperature]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Pressure:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), \" \", item.pressure]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(MongoDBDashboard, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n_c = MongoDBDashboard;\nexport default MongoDBDashboard;\nvar _c;\n$RefreshReg$(_c, \"MongoDBDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MongoDBDashboard","_s","data","setData","loading","setLoading","get","then","response","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","className","temperature","pressure","_id","_c","$RefreshReg$"],"sources":["C:/Users/xud1/ReactProj/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction MongoDBDashboard() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Replace the URL with your API endpoint\n    axios.get('http://localhost:5000/api/data')\n      .then((response) => {\n        setData(response.data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(error);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h2>MongoDB Dashboard</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {data.map((item) => (\n            <li key={item._id}>\n              <div className=\"data-item\">\n                <strong>Temperature:</strong> {item.temperature}\n              </div>\n              <div className=\"data-item\">\n                <strong>Pressure:</strong> {item.pressure}\n              </div>\n              {/* Add more fields */}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default MongoDBDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACS,GAAG,CAAC,gCAAgC,CAAC,CACxCC,IAAI,CAAEC,QAAQ,IAAK;MAClBL,OAAO,CAACK,QAAQ,CAACN,IAAI,CAAC;MACtBG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBZ,OAAO,gBACNL,OAAA;MAAAa,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBjB,OAAA;MAAAa,QAAA,EACGV,IAAI,CAACe,GAAG,CAAEC,IAAI,iBACbnB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAKoB,SAAS,EAAC,WAAW;UAAAP,QAAA,gBACxBb,OAAA;YAAAa,QAAA,EAAQ;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACE,WAAW;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACNjB,OAAA;UAAKoB,SAAS,EAAC,WAAW;UAAAP,QAAA,gBACxBb,OAAA;YAAAa,QAAA,EAAQ;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACG,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA,GANCE,IAAI,CAACI,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CAvCQD,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AAyCzB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}