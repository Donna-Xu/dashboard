{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nfunction Dashboard() {\n  _s();\n  const [searchCriteria, setSearchCriteria] = useState({\n    collection: 'temperature',\n    temperatureLT: '',\n    pressureGT: ''\n  });\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearch = () => {\n    const apiUrl = `/api/search/${searchCriteria.collection}`;\n\n    // Send an HTTP POST request with searchCriteria\n    fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(searchCriteria)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // Handle the data, e.g., set it using setSearchResults\n      setSearchResults(data);\n    }).catch(error => {\n      console.error('Error:', error);\n      // Handle errors\n    });\n  };\n}\n_s(Dashboard, \"A/H1z0tdJ11o/XOZlHARVro8/ik=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Dashboard","_s","searchCriteria","setSearchCriteria","collection","temperatureLT","pressureGT","searchResults","setSearchResults","handleSearch","apiUrl","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","catch","error","console","_c","$RefreshReg$"],"sources":["C:/Users/xud1/ReactProj/my-app/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Dashboard() {\r\n  const [searchCriteria, setSearchCriteria] = useState({\r\n    collection: 'temperature',\r\n    temperatureLT: '',\r\n    pressureGT: '',\r\n  });\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const handleSearch = () => {\r\n    const apiUrl = `/api/search/${searchCriteria.collection}`;\r\n\r\n  // Send an HTTP POST request with searchCriteria\r\n  fetch(apiUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(searchCriteria),\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      // Handle the data, e.g., set it using setSearchResults\r\n      setSearchResults(data);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n      // Handle errors\r\n    });\r\n};\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC;IACnDM,UAAU,EAAE,aAAa;IACzBC,aAAa,EAAE,EAAE;IACjBC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,MAAM,GAAI,eAAcR,cAAc,CAACE,UAAW,EAAC;;IAE3D;IACAO,KAAK,CAACD,MAAM,EAAE;MACZE,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,cAAc;IACrC,CAAC,CAAC,CACCe,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd;MACAd,gBAAgB,CAACc,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B;IACF,CAAC,CAAC;EACN,CAAC;AACD;AAACvB,EAAA,CAlCQD,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}