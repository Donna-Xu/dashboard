{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xud1\\\\ReactProj\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [search, setSearch] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleSearch = () => {\n    // Use the \"search\" state to query your MongoDB data via API\n    setLoading(true);\n    axios.get(`/api/search?query=${search}`).then(response => {\n      setResults(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for data...\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Column 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: results.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [result.name, \" - \", result.value]\n          }, result._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n          // Customize this based on your data structure\n          )\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Column 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"6EtuFCTanIvfUj9dF9AoYpAoS4k=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","search","setSearch","results","setResults","loading","setLoading","handleSearch","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","map","result","name","_id","_c","$RefreshReg$"],"sources":["C:/Users/xud1/ReactProj/my-app/src/App.js"],"sourcesContent":["// src/components/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'App.css';\n\n\nfunction Dashboard() {\n  const [search, setSearch] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSearch = () => {\n    // Use the \"search\" state to query your MongoDB data via API\n    setLoading(true);\n    axios.get(`/api/search?query=${search}`)\n      .then((response) => {\n        setResults(response.data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(error);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Dashboard</h2>\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Search for data...\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n\n      <div className=\"columns\">\n        <div className=\"column\">\n          <h3>Column 1</h3>\n          <ul>\n            {results.map((result) => (\n              <li key={result._id}>{result.name} - {result.value}</li>\n              // Customize this based on your data structure\n            ))}\n          </ul>\n        </div>\n        <div className=\"column\">\n          <h3>Column 2</h3>\n          {/* Render the second column content here */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}