{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xud1\\\\ReactProj\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [temperature, setTemperature] = useState('');\n  const [pressure, setPressure] = useState('');\n\n  // State variables for other collection criteria\n  const [color, setColor] = useState('');\n  const [meltingPoint, setMeltingPoint] = useState('');\n  // Add state variables for other collections\n\n  const [predictions, setPredictions] = useState([]);\n  const [otherCollectionData, setOtherCollectionData] = useState([]);\n  // Add state variables for other collections\n\n  const handleFilter = async () => {\n    // Fetch predictions based on temperature and pressure conditions\n    const predictionsResponse = await axios.get(`/api/predictions?temperature=${temperature}&pressure=${pressure}`);\n    setPredictions(predictionsResponse.data);\n\n    // Fetch data from other collections based on respective conditions\n    const colorResponse = await axios.get(`/api/color?color=${color}`);\n    setColorData(colorResponse.data);\n    const meltingPointResponse = await axios.get(`/api/meltingpoint?meltingPoint=${meltingPoint}`);\n    setMeltingPointData(meltingPointResponse.data);\n    // Add similar requests for other collections\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Temperature (X):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: temperature,\n      onChange: e => setTemperature(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Pressure (Y):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: pressure,\n      onChange: e => setPressure(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Color:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: color,\n      onChange: e => setColor(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Melting Point:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: meltingPoint,\n      onChange: e => setMeltingPoint(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFilter,\n      children: \"Filter Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: predictions.map((prediction, index) => /*#__PURE__*/_jsxDEV(\"li\", {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Color Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: colorData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Melting Point Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: meltingPointData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"eS4u/QEp9kWUOu0o0cJ7ZEQy62s=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","temperature","setTemperature","pressure","setPressure","color","setColor","meltingPoint","setMeltingPoint","predictions","setPredictions","otherCollectionData","setOtherCollectionData","handleFilter","predictionsResponse","get","data","colorResponse","setColorData","meltingPointResponse","setMeltingPointData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","prediction","index","colorData","item","meltingPointData","_c","$RefreshReg$"],"sources":["C:/Users/xud1/ReactProj/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Dashboard() {\n  const [temperature, setTemperature] = useState('');\n  const [pressure, setPressure] = useState('');\n\n  // State variables for other collection criteria\n  const [color, setColor] = useState('');\n  const [meltingPoint, setMeltingPoint] = useState('');\n  // Add state variables for other collections\n\n  const [predictions, setPredictions] = useState([]);\n  const [otherCollectionData, setOtherCollectionData] = useState([]);\n  // Add state variables for other collections\n\n  const handleFilter = async () => {\n    // Fetch predictions based on temperature and pressure conditions\n    const predictionsResponse = await axios.get(`/api/predictions?temperature=${temperature}&pressure=${pressure}`);\n    setPredictions(predictionsResponse.data);\n\n    // Fetch data from other collections based on respective conditions\n    const colorResponse = await axios.get(`/api/color?color=${color}`);\n    setColorData(colorResponse.data);\n\n    const meltingPointResponse = await axios.get(`/api/meltingpoint?meltingPoint=${meltingPoint}`);\n    setMeltingPointData(meltingPointResponse.data);\n    // Add similar requests for other collections\n  };\n\n  return (\n    <div>\n      <h2>Dashboard</h2>\n      {/* Input fields for predictions */}\n      <label>Temperature (X):</label>\n      <input type=\"number\" value={temperature} onChange={(e) => setTemperature(e.target.value)} />\n      <label>Pressure (Y):</label>\n      <input type=\"number\" value={pressure} onChange={(e) => setPressure(e.target.value)} />\n\n      {/* Input fields for other collections */}\n      <label>Color:</label>\n      <input value={color} onChange={(e) => setColor(e.target.value)} />\n      <label>Melting Point:</label>\n      <input value={meltingPoint} onChange={(e) => setMeltingPoint(e.target.value)} />\n      {/* Add similar input fields for other collections criteria */}\n\n      <button onClick={handleFilter}>Filter Data</button>\n\n      {/* Display filtered predictions */}\n      <h3>Predictions</h3>\n      <ul>\n        {predictions.map((prediction, index) => (\n          <li key={index}>{/* Display prediction data here */}</li>\n        ))}\n      </ul>\n\n      {/* Display filtered data from other collections */}\n      <h3>Color Data</h3>\n      <ul>\n        {colorData.map((item, index) => (\n          <li key={index}>{/* Display color data here */}</li>\n        ))}\n      </ul>\n\n      <h3>Melting Point Data</h3>\n      <ul>\n        {meltingPointData.map((item, index) => (\n          <li key={index}>{/* Display melting point data here */}</li>\n        ))}\n      </ul>\n      {/* Add similar code to display data from other collections */}\n    </div>\n  );\n}\n\nexport default Dashboard;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}